[
  {
    "objectID": "blackboard.html",
    "href": "blackboard.html",
    "title": "Uploading to Blackboard",
    "section": "",
    "text": "These instructions are for the “original” Blackboard (rather than “Ultra”).\n\nCompress the folder containing the html notes to a zip file. After following these instructions, students will be able to access all files in this folder, so don’t include anything you wouldn’t want students to see, such as solutions. For Chirun, you can use the zip file downloaded from the Chirun online interface directly (e.g. simple-chirun-main.zip). For Quarto, compress the “_notes” folder.\nGo to your Blackboard course. Under “Course Management”, click on “Files”, then the name of your course. Press “Upload” -&gt; “Upload Zip Package”, and upload your zip file, which will automatically extract the contents of the zip file. (If unpacking the contents of the zip file at the top level of your Blackboard course files could create confusion, first press “Create Folder” and make a folder specifically for storing your notes)\nWhen you want to link to your notes (e.g. in Course Content), click “Build Content”, then either “Item” (to link to multiple documents, or write some accompanying text on Blackboard) or “File” (to link directly to one document). Click “Browse Course Files”, and locate “index.html”. You will be asked about how to manage access to the files in the folder: all html features should work if you choose the default “Give users access to all files and folders in the folder”. If you chose to create a “File”, I suggest changing the option “Open in New Window” to “Yes”. Then click “Submit”.\n\nTo update your notes on Blackboard after making changes, repeat step 1 to get a new zip file with the updated files. Then repeat step 2 to upload your new zip file to the course files, selecting the option: “If selected, the system automatically overwrites the existing file with the same name”."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Creating accessible mathematical lecture notes",
    "section": "",
    "text": "This is an in-development guide for writing accessible lecture notes in Mathematical Sciences. Our notes are typically written in LaTeX, and provided to students in pdf format. At the moment, equations in pdfs are typically not correctly interpreted by screen readers. The content is displayed in a fixed format, and often that format is difficult for dyslexic people to read (see the Dyslexia friendly style guide for advice on this).\nThe main focus of this guide is on methods to provide notes in html format. Screen readers can handle MathJax equations in html, and the html output from the tools described below is typically easier to read for dyslexic people than pdfs produced by LaTeX. Providing notes in html format will not fix all accessibility issues, but it is a good place to start.\nTo demonstrate methods, I will use some simple example LaTeX notes (which are based on material from Wikipedia).\nI will give instructions on how to use two systems to convert to html format:\n\nChirun is a good option if you want to continue to write your notes in LaTeX. It has a relatively easy-to-use online interface which means it can be used without installing anything on your own computer. Chirun is under development and the documentation is currently incomplete. Here are the example notes from Chirun. Chirun is specifically focused on accessibility, and allows users to change the font, spacing and background colour which may be helpful for dyslexic students.\nQuarto is is a good option if you are happy to convert your LaTeX notes into markdown format, then work with the markdown notes (rather than the original LaTeX source) from then on. It is based on R Markdown, but is designed for a wider range of users, and you can include R or python code easily. Quarto is well documented. Here are the example notes from Quarto.\n\nConverting your real notes is likely to require substantially more work than converting the simple example notes. It is likely that you will need to simplify your original LaTeX code to get either system to work, for instance reducing dependence on LaTeX packages. Conversion to Quarto is likely to require more changes than processing with Chirun.\nI have also provided some guidance on uploading html notes to Blackboard."
  },
  {
    "objectID": "quarto.html",
    "href": "quarto.html",
    "title": "Quarto",
    "section": "",
    "text": "Quarto is a system to convert from markdown files to a range of formats, including html. It is based on R Markdown, but is aimed at a more general audience, rather than just R users. If you have previously written files in R Markdown (or bookdown), there is no need to switch to Quarto. VS code and RStudio both have good support for Quarto, or you can edit Quarto markdown files in any text editor and use the command line to process the files.\nYou will first need to install Quarto.\nIf you are starting from scratch, you can follow the guide to using Quarto to develop your notes. I suggest using the Quarto book format for lecture notes.\nIf you have existing LaTeX lecture notes, I have written some instructions below on converting to Quarto (this process is not entirely straightforward, and is likely to take some time)."
  },
  {
    "objectID": "quarto.html#introduction",
    "href": "quarto.html#introduction",
    "title": "Quarto",
    "section": "",
    "text": "Quarto is a system to convert from markdown files to a range of formats, including html. It is based on R Markdown, but is aimed at a more general audience, rather than just R users. If you have previously written files in R Markdown (or bookdown), there is no need to switch to Quarto. VS code and RStudio both have good support for Quarto, or you can edit Quarto markdown files in any text editor and use the command line to process the files.\nYou will first need to install Quarto.\nIf you are starting from scratch, you can follow the guide to using Quarto to develop your notes. I suggest using the Quarto book format for lecture notes.\nIf you have existing LaTeX lecture notes, I have written some instructions below on converting to Quarto (this process is not entirely straightforward, and is likely to take some time)."
  },
  {
    "objectID": "quarto.html#converting-latex-notes",
    "href": "quarto.html#converting-latex-notes",
    "title": "Quarto",
    "section": "Converting LaTeX notes",
    "text": "Converting LaTeX notes\n\nCreate the structure for the notes using this quick start guide on writing a Quarto book. Edit the file _quarto.yml to match the structure of your notes. Replace the file “references.bib” with your own .bib file, and put the name of your .bib file in the bibliography section of _quarto.yml.\nHere is _quarto.yml for the simple example notes:\nproject:\n  type: book\n\nbook:\n  title: \"Some example Mathematical lecture notes\"\n  author: \"Dr. A. Lecturer\"\n  chapters:\n    - index.qmd\n    - 01-determinant.qmd\n    - 02-variance.qmd\n    - references.qmd\n\nbibliography: refs.bib\n\nformat:\n  html:\n    theme: cosmo\n  pdf:\n    documentclass: scrreprt\n\nConvert files from .tex to markdown with pandoc. It is possible to use pandoc online. Choose from “latex” to “markdown”. Copy and paste output into a .qmd file with same name as each Chapter’s .tex file. The content which you would like to appear on the first page when the notes are viewed should appear in a file called index.qmd.\nAt this stage, you can run quarto to preview the output. If you are using VS Code or RStudio, you can press the “Render” button. From the command line, type “quarto preview”.\nThere are likely to be problems with the output. Here are problems which needed fixing with the simple example notes:\n\nThe default attempt at cross referencing from the pandoc output is not correct. Here is the Quarto documentation on cross referencing. There is a strict structure for where to put the labels and for the names of the labels: for instance, Figures need to have labels starting fig-, Tables need to have labels starting tbl-. Avoid the use of underscores in labels.\nFor instance, we include a figure with:\n![The caption](figure_filename.png){#fig-test}\nand refer to it with\n@fig-test shows...\nThe default conversion of tables does not always work well. Try copying the LaTeX table code to pandoc online, then convert from “latex” to “markdown-mmd”, and replace the initial attempt at the markdown table with this one. After that, you will still need to fix the label for the table (labels for tables should always start with tbl-).\nAn example table should look something like:\n| Column 1      | Column 2  |\n|:--------------|:----------|\n| Hello         | $x^2$     |\n| Goodbye       | $\\sin(y)$ |\n\n  : The caption. {#tbl-test}\nWhich when rendered to html will look like:\n\n\n\nTable 1: The caption.\n\n\n\n\n\nColumn 1\nColumn 2\n\n\n\n\nHello\n\\(x^2\\)\n\n\nGoodbye\n\\(\\sin(y)\\)\n\n\n\n\n\n\nYou can cite the table with\n@tbl-test shows...\nwhich outputs\nTable 1 shows…\nHere is the documentation on tables.\nThe default conversion of AMS theorem-type environments does not work well, but it is fairly easy to fix this.\nFor instance, the theorem in the simple example notes can be written as:\n::: {#thm-nonneg}\nThe variance of any random variable $X$ is non-negative\n$$\\operatorname{Var}(X)\\geq 0.$$\n:::\nHere is the documentation on theorem environments\n\nOnce the preview of the output is looking good, you can try creating the html and pdf versions by typing “quarto render” in the terminal.\nYou may need to fix additional errors at this stage. (With the simple example notes, I got an error, which was fixed by explicitly stating the file ending of included graphics files.)\nOnce any errors are fixed, this will make the folder “_book”, containing the html and pdf notes. You will use this folder if you want to upload to Blackboard. As an alternative (if you don’t mind your notes being publicly available) it is easy to publish Quarto documents online.\nFor the simple example notes, here is the source after conversion to Quarto format and the resulting html notes."
  },
  {
    "objectID": "chirun.html",
    "href": "chirun.html",
    "title": "Chirun",
    "section": "",
    "text": "Chirun is a system to convert LaTeX notes to a range of formats, including html. Here is the Chirun documentation: Chirun is in development and the documentation may be incomplete. Chirun can be run either with a Python package (requiring installation), or an online interface (not requiring installation). I will describe using the online interface below."
  },
  {
    "objectID": "chirun.html#introduction",
    "href": "chirun.html#introduction",
    "title": "Chirun",
    "section": "",
    "text": "Chirun is a system to convert LaTeX notes to a range of formats, including html. Here is the Chirun documentation: Chirun is in development and the documentation may be incomplete. Chirun can be run either with a Python package (requiring installation), or an online interface (not requiring installation). I will describe using the online interface below."
  },
  {
    "objectID": "chirun.html#using-the-online-interface-to-chirun",
    "href": "chirun.html#using-the-online-interface-to-chirun",
    "title": "Chirun",
    "section": "Using the online interface to Chirun",
    "text": "Using the online interface to Chirun\n\nCompress the folder containing LaTeX notes to a zip file. As an example, we will use the simple example LaTeX notes. You can download a zip file of these example notes, simple-main.zip.\nGo to lti.chirun.org.uk and click “Create a new package”. Upload the zip file (e.g. simple-main.zip) to the “Upload files” section.\nYou will be prompted to configure Chirun. Under “Package settings”, you are asked for some basic information (title, author, etc.). After completing this, delete the input files which are not standalone documents, and are included as sections or chapters of notes. In our example, we click on each of “01-determinant.tex”, “preface.tex” and “02-variance.tex” then press the “Delete this item” button. The only file we keep in this case is “notes.tex”. Click on “notes.tex”, and change the type to “Document”. You can change the title to something more informative.\nPress “Save” and Chirun will attempt to build your notes (this may take some time).\nIn the simple example, the notes build without errors, but often you will get an error on the first attempt and will need to make some changes to your notes (see Troubleshooting).\nIf the build succeeds, you can view the html lecture notes. Check the whole text carefully: even if the build succeeds, there might be problems, e.g. with symbols, tables or custom formatting.\nYou can also download your lecture notes as processed by Chirun as a zip file. This is also useful for uploading to blackboard.\n\nYou can save your configuration, to avoid having to repeat step 3 every time you run Chirun (e.g. if you make a change to your notes). To do this, extract the downloaded zip file from step 7, and copy the file “MANIFEST.yml” into the folder with your LaTeX sources files. Rename this file to “config.yml”. If you follow the steps again, your previous configuration will be saved, and you can skip over step 3.\nFor the simple example notes, here is the content after processing with Chirun and the resulting html notes."
  },
  {
    "objectID": "chirun.html#troubleshooting",
    "href": "chirun.html#troubleshooting",
    "title": "Chirun",
    "section": "Troubleshooting",
    "text": "Troubleshooting\nHere are some issues I have encountered when using Chirun:\n\nChirun is not able to use some LaTeX packages. You may have to simplify your LaTeX code to avoid using such packages. You can try to track down packages causing problems by looking in the build log. For instance, if I tried to use the fourier package, the build would encounter an error. If I looked in the build log, at some point I would see:\nWARNING: No Python version of fourier.sty was found \nWARNING: Will now try to load a LaTeX implementation of fourier.sty \nwhich indicates that I should try removing the fourier package. Chirun error messages are not always clear, but I have found that searching for the DEBUG section then looking for the first WARNING is useful to track down packages causing problems.\nChirun does not work with including pdfs. You will need to convert any graphics included as pdfs to an image format (e.g. png) first.\nChirun sometimes has problems processing tables correctly. You may need to simplify the structure of tables.\nFor referencing, Chirun works fine with bibtex, but not biblatex."
  }
]